import java.util.*;
public class DepthFirst{
	
	 public static boolean checkForCycle(int node, int parent, boolean vis[], ArrayList<ArrayList<Integer>> adj) {
	        vis[node] = true; 
	        for(Integer it: adj.get(node)) {
	            if(vis[it] == false) {
	                if(checkForCycle(it, node, vis, adj) == true) 
	                    return true; 
	            }
	            else if(it!=parent) 
	                return true; 
	        }
	        
	        return false; 
	    }
	 
	    public static boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj)
	    {
	        boolean vis[] = new boolean[V];
	        
	        for(int i = 0;i<V;i++) {
	            if(vis[i] == false) {
	                if(checkForCycle(i, -1, vis, adj))
	                    return true; 
	            }
	        }
	        
	        return false; 
	    }
	
	
	public static void main(String agrs[]) {
		@SuppressWarnings("resource")
		Scanner sc = new Scanner(System.in);
		System.out.println("enter the number of vertices");
		int n = sc.nextInt();
		System.out.println("Enter the edges");
		int m = sc.nextInt();
		ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
		for(int i=0; i<n; i++) {											
			adj.add(new ArrayList<Integer>());
		}
		for(int i=0; i<m; i++) {
			int u = sc.nextInt();
			int v = sc.nextInt();
			adj.get(u).add(v);
			adj.get(v).add(u);
		}
		boolean ans = isCycle(n, adj);
        if(ans)
            System.out.println("Graph contains cycle");
        else
            System.out.println("Graph doesn't contains cycle");
	}

	
}
